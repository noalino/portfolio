@import '../helpers/colors', '../helpers/sizes';

$tag-nb: 5;

$line-width: 200px;
$line-height: 2px;
$line-color: $light-color;
$tag-size: 8px;
$scale: 1.75;
$space: 8px;
$arrow-size: 2px;

@mixin arrow {
  content: '';
  display: inline-block;
  position: absolute;
  border: solid $primary-color;
  border-width: 0 $arrow-size $arrow-size 0;
  padding: $arrow-size;
}

/*****************
  Horizontal bar
*****************/
.line {
  background-image: linear-gradient(to right, $line-color 33%, transparent 0%);
  background-position: bottom;
  background-size: $space $line-height;
  background-repeat: repeat-x;
  height: $line-height + $tag-size;
  width: $line-width;
  position: absolute;
  top: $sm-header-height * 1.5;
  left: 50%;
  transform: translateX(-50%);
  z-index: 5;
}

.tag {
  display: block;
  position: absolute;
  height: $tag-size;
  width: $tag-size;
  border-radius: 50%;
  background-color: $dark-bg-color;

  &[data-page='current'] {
    background-color: $primary-color;
    transform: scale($scale);
    transition: transform 50ms ease-in;

    // Left arrow
    &:not(:first-child):before {
      @include arrow;
      top: $arrow-size / 2;
      left: -$arrow-size * 2.5;
      transform: rotate(135deg) scale(0.75);
    }

    // Right arrow
    &:not(:last-child):after {
      @include arrow;
      top: $arrow-size / 2;
      right: -$arrow-size * 2.5;
      transform: rotate(-45deg) scale(0.75);
    }
  }
}

@for $i from 1 through $tag-nb {
  .tag_#{$i} {
    top: ($tag-size + $line-height) / 2;
    left: (($line-width - $tag-size)/($tag-nb - 1)) * ($i - 1);
  }
}

/****************
  Vertical bar
****************/
@media only screen and (orientation: landscape) and (min-height: 500px) {
  $line-width: 2px;
  $line-height: 250px;

  .line {
    background-image: linear-gradient($line-color 33%, transparent 0%);
    background-position: right;
    background-size: $line-width $space;
    background-repeat: repeat-y;
    border-bottom: none;
    width: $line-width + $tag-size;
    height: $line-height;
    position: fixed;
    left: $lg-side-margin / 2;
    top: 30vh;
    transform: translateX(-$line-width * 2);
  }

  .tag {

    &[data-page='current'] {

      // Up arrow
      &:not(:first-child):before {
        @include arrow;
        top: -$arrow-size * 2.5;
        left: $arrow-size / 2;
        transform: rotate(-135deg) scale(0.75);
      }

      // Down arrow
      &:not(:last-child):after {
        @include arrow;
        top: $arrow-size * 3.65;
        right: $arrow-size / 2;
        transform: rotate(45deg) scale(0.75);
      }
    }
  }

  @for $i from 1 through $tag-nb {
    .tag_#{$i} {
      left: ($tag-size + $line-width) / 2;
      top: (($line-height - $tag-size)/($tag-nb - 1)) * ($i - 1);
    }
  }
}